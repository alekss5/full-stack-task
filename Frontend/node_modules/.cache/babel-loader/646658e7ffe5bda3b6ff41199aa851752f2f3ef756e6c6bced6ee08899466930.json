{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandar/React/Full Stack Task/Frontend/src/Components/UploadForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadForm() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!title || !description || !file) {\n      setError('All fields are required');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('description', description);\n    formData.append('photo', file);\n    const data = {\n      'title': title,\n      'description': description,\n      'photo': file\n    };\n    try {\n      // Create new photo\n      await fetch('http://localhost:3001/photos', {\n        method: 'POST',\n        body: data\n      });\n      // Reset form after successful submission\n      setTitle('');\n      setDescription('');\n      setFile(null);\n      setError('');\n    } catch (err) {\n      setError('Error saving photo');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n}\n_s(UploadForm, \"ss/9oQ5d45Jt7j7gGBeJAkPu+kM=\");\n_c = UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","UploadForm","_s","title","setTitle","description","setDescription","file","setFile","error","setError","handleSubmit","e","preventDefault","formData","FormData","append","data","fetch","method","body","err","onSubmit","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","files","_c","$RefreshReg$"],"sources":["/Users/aleksandar/React/Full Stack Task/Frontend/src/Components/UploadForm.js"],"sourcesContent":["import  { useState } from 'react';\n\nexport default function UploadForm() {\n \n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [file, setFile] = useState(null);\n    const [error, setError] = useState('');\n  \n    const handleSubmit = async (e) => {\n      e.preventDefault();\n      if (!title || !description || !file) {\n        setError('All fields are required');\n        return;\n      }\n      const formData = new FormData();\n      formData.append('title', title);\n      formData.append('description', description);\n      formData.append('photo', file);\n\n      const data = {\n        'title': title,\n        'description': description,\n        'photo': file,\n      }\n  \n      try {\n        // Create new photo\n        await fetch('http://localhost:3001/photos', {\n          method: 'POST',\n          body: data,\n        });\n        // Reset form after successful submission\n        setTitle('');\n        setDescription('');\n        setFile(null);\n        setError('');\n      } catch (err) {\n        setError('Error saving photo');\n      }\n    };\n    return (\n      <form onSubmit={handleSubmit}>\n        {error && <p style={{ color: 'red' }}>{error}</p>}\n        <div>\n          <label>Title</label>\n          <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\n        </div>\n        <div>\n          <label>Description</label>\n          <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\n        </div>\n        <div>\n          <label>Photo</label>\n          <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\n        </div>\n        <button type=\"submit\">Save</button>\n      </form>\n    )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}